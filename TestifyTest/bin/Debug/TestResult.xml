<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\WIP\Testify\Testify\TestifyTest\bin\Debug\TestifyTest.dll" total="12" errors="1" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2014-07-03" time="05:14:15">
  <environment nunit-version="2.6.2.12296" clr-version="4.0.30319.18444" os-version="Microsoft Windows NT 6.1.7601 Service Pack 1" platform="Win32NT" cwd="C:\WIP\Testify\Testify\TestifyTest\bin\Debug" machine-name="RAMPAGE" user="Lee" user-domain="Rampage" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Assembly" name="C:\WIP\Testify\Testify\TestifyTest\bin\Debug\TestifyTest.dll" executed="True" result="Failure" success="False" time="1700.103" asserts="0">
    <results>
      <test-suite type="Namespace" name="Leem" executed="True" result="Failure" success="False" time="1700.092" asserts="0">
        <results>
          <test-suite type="Namespace" name="Testify" executed="True" result="Failure" success="False" time="1700.092" asserts="0">
            <results>
              <test-suite type="TestFixture" name="CoverageServiceTest" executed="True" result="Failure" success="False" time="1700.091" asserts="0">
                <results>
                  <test-suite type="ParameterizedTest" name="ParseArguments_HandlesString" executed="True" result="Failure" success="False" time="1700.084" asserts="0">
                    <results>
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;Domain.Services.SingleSignOnService.CreateSamlAssertion(System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)&quot;,&quot;Dictionary&lt;String,String&gt;&quot;)" executed="True" result="Error" success="False" time="1675.915" asserts="0">
                        <failure>
                          <message><![CDATA[System.ArgumentOutOfRangeException : Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index]]></message>
                          <stack-trace><![CDATA[at System.Collections.Generic.List`1.get_Item(Int32 index)
at Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(String methodName, String expected) in c:\WIP\Testify\Testify\TestifyTest\CoverageServiceTest.cs:line 33
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;QMedPidDataWebservice.QMED_Pid.SrchByLastNameFirstAsync(System.Object)&quot;,&quot;Object&quot;)" executed="True" result="Success" success="True" time="1.650" asserts="1" />
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;Services.Util.QMedSchedulingImpersonation.ExecuteAction(System.Action)&quot;,&quot;Action&quot;)" executed="True" result="Success" success="True" time="1.345" asserts="1" />
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;Services.Util.QMedSchedulingImpersonation.ExecuteAction(System.Func`1&lt;T&gt;)&quot;,&quot;Func&lt;T&gt;&quot;)" executed="True" result="Success" success="True" time="1.827" asserts="1" />
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;Services.Util.DecryptionUtil.Decrypt(System.Byte[])&quot;,&quot;Byte[]&quot;)" executed="True" result="Success" success="True" time="1.260" asserts="1" />
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;Services.OnlineAppointmentService.GetNextAvailableAppointments(System.Collections.Generic.IEnumerable`1&lt;Quad.QuadMed.WebPortal.Scheduling.Objects.Provider&gt;)&quot;,&quot;IEnumerable&lt;Provider&gt;&quot;)" executed="True" result="Success" success="True" time="2.014" asserts="1" />
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;Services.Util.ListExtension.AddRange(System.Collections.Generic.IList`1&lt;T&gt;)&quot;,&quot;IList&lt;T&gt;&quot;)" executed="True" result="Success" success="True" time="2.147" asserts="1" />
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;Services.WellnessParticipantService.GetCurrentEnrolledPrograms(System.Collections.Generic.IList`1&lt;Quad.QuadMed.WebPortal.Domain.Objects.Interfaces.IQMedService&gt;)&quot;,&quot;IList&lt;IQMedService&gt;&quot;)" executed="True" result="Success" success="True" time="1.971" asserts="1" />
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;Services.WellnessParticipantService.GetProgramsEligibleToEnrollIn(System.Collections.Generic.IList`1&lt;System.Int32&gt;)&quot;,&quot;IList&lt;int&gt;&quot;)" executed="True" result="Success" success="True" time="2.260" asserts="1" />
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;Services.Util.ListExtension.AddRange(System.Collections.Generic.IList`1&lt;T&gt;,System.Collections.Generic.IEnumerable`1&lt;T&gt;)&quot;,&quot;IList&lt;T&gt;&quot;)" executed="True" result="Success" success="True" time="3.804" asserts="1" />
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;Services.MessagingService.SendAppointmentConfirmation(System.Collections.Generic.List`1&lt;System.Web.UI.WebControls.ListItem&gt;,System.String)&quot;,&quot;List&lt;ListItem&gt;&quot;)" executed="True" result="Success" success="True" time="3.491" asserts="1" />
                      <test-case name="Leem.Testify.CoverageServiceTest.ParseArguments_HandlesString(&quot;Quad.QuadMed.WebPortal.Domain.Services.SurveyService.GenerateSurveyPDF(System.Nullable`1&lt;System.Int32&gt;)&quot;,&quot;Nullable&lt;int&gt;&quot;)" executed="True" result="Success" success="True" time="2.275" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>